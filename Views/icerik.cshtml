@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using Umbraco.Web.Security
@using Umbraco.Web
@using Umbraco.Core
@using Umbraco.Core.Services
@using Umbraco.Core.Models
	
@{
    Layout = "iskelet.cshtml";
	
	if(!Members.IsLoggedIn()) {
		Response.Redirect("/ff.aspx");
	}
	var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
	var kullanici = Members.GetCurrentMember();
	var bolum_id = Members.GetCurrentMember().GetPropertyValue("bolumuu");	
	var kullanici_ismi = Members.GetCurrentMemberProfileModel().UserName;
	
	var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
	IPublishedContent content = umbracoHelper.TypedContent(bolum_id);
	var abc = umbracoHelper.Content(bolum_id);
	var tum_hocalar = abc.AncestorOrSelf("Birim").Descendants("Ogretim_elemani");
	
}
@section nav {
	<nav>
	<div class="nav-wrapper">
		<a href="#" class="brand-logo" style="font-family:Tahoma">Sınav Duyurusu Ekleme Paneli</a>
		<ul id="nav-mobile" class="right hide-on-med-and-down">
			<li><a href="badges.html">@kullanici_ismi</a></li>
			<li><a href="/logout.aspx"><i class="material-icons">power_settings_new</i></a></li>
		</ul>
	</div>
</nav>
	
}
@section body {
	<div id="app">
  <h4 class="head"> Application</h4>
  <div class="container">
	 <table class="table-responsive bordered highlight centered hoverable z-depth-2" v-show="results.length">
      <thead>
        <tr>
          <th v-for="column in columns">
            {{column}}
          </th>
        </tr>
      </thead>
      <tbody>
		  <tr v-for="(sinav,index) in results" :data-id="sinav.id">
          <td>{{index}}</td>
          <td>
            {{sinav.dersin_kodu}}
          </td>
          <td>
            {{sinav.dersin_adi}}
          </td>
          <td>
            {{sinav.sinav_tarihi}} {{sinav.sinav_saati}}
          </td>
          <td>
            {{sinav.sinav_salonlari}}
          </td>
          <td>
            {{sinav.gozetmenler}}
          </td>
		<td>
            {{sinav.durum}}
          </td>
			<td>
            {{sinav.yayinlanmasi_planlanan_zaman}}
          </td>
			  <td>
            {{sinav.yayindan_kaldirilma_zamani}}
          </td>
          <td style="width: 18%;">
            <a href="#modal" @@click="edit(index)" class="btn waves-effect waves-light yellow darken-2 modal-trigger"><i class="material-icons">edit</i>
            </a>
            <a href="#!" class="btn waves-effect waves-light red darken-2" @@click="archive(index)"><i class="material-icons">archive</i>
            </a>
          </td>
        </tr>
        <tr>
          <td colspan="2">
            <div class="input-field">
              <input placeholder="Placeholder" ref="dkodu" v-model="input.dersin_kodu" id="dkodu" type="text">
              <label for="lname">Last Name</label>
            </div>
          </td>
          <td>
            <div class="input-field">
              <input placeholder="Placeholder" v-model="input.dersin_adi" id="dadi" type="text">
              <label for="fname">First Name</label>
            </div>
          </td>
          <td>
            <div class="input-field">
              <input placeholder="Placeholder" v-model="input.sinav_tarihi" id="starihi" type="text">
              <label for="age">Age</label>
            </div>
          </td>
          <td>
            <div class="input-field">
              <input placeholder="Placeholder" v-model="input.sinav_salonlari" id="salonlar" type="text">
              <label for="job">Job</label>
            </div>
          </td>
          <td>
            <div class="input-field">
              <input placeholder="Placeholder" v-model="input.gozetmenler" id="gozetmenler" type="text">
              <label for="address">Address</label>
            </div>
          </td>
          <td><a href="#!" @@click="add" class="btn btn-waves green darken-2"><i class="material-icons">add</i></a></td>
        </tr>
      </tbody>
    </table>

    <table class="table-responsive centered bordered striped highlight z-depth-1 hoverable" v-show="bin.length">
      <thead>
        <tr>
          <th v-for="column in columns">
            {{column}}
          </th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="(sinav,index) in bin">
          <td>{{index}}</td>
          <td>
            {{sinav.dersin_kodu}}
          </td>
          <td>
            {{sinav.dersin_adi}}
          </td>
          <td>
            {{sinav.sinav_tarihi}} {{sinav.sinav_saati}}
          </td>
          <td>
            {{sinav.sinav_salonlari}}
          </td>
          <td>
            {{sinav.gozetmenler}}
          </td>
			<td>
			            {{sinav.durum}}
			</td>
				<td>
            {{sinav.yayinlanmasi_planlanan_zaman}}
          </td>
			  <td>
            {{sinav.yayindan_kaldirilma_zamani}}
          </td>
          <td>
            <a href="#!" @@click="restore(index)" class="btn waves-effect waves-light blue darken-2"><i class="material-icons">restore</i>
            </a>
            <a href="#!" @@click="deplete(index)" class="btn waves-effect waves-light red darken-2"><i class="material-icons">delete</i>
            </a>
          </td>
        </tr>
      </tbody>
    </table>
  </div>

  <div id="modal" class="modal modal-fixed-footer">
    <div class="modal-content">
      <h4 class="center-align">Edit</h4>
      <p class="center-align">Edition form. Update informations</p>
      <div class="row">
        <form class="col s12">
          <div class="row">
            <div class="input-field col s6">
              <input placeholder="John" id="last_name" type="text" v-model="editInput.lname">
              <label for="last_name">Last Name</label>
            </div>
            <div class="input-field col s6">
              <input placeholder="Doe" id="first_name" type="text" v-model="editInput.fname">
              <label for="first_name">First Name</label>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s6">
              <input placeholder="26" id="edit_age" type="text" v-model="editInput.age">
              <label for="edit_age">Age</label>
            </div>
            <div class="input-field col s6">
              <input placeholder="Teacher" id="edit_job" type="text" v-model="editInput.job">
              <label for="edit_job">Job</label>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input placeholder="Address" id="edit_address" type="text" v-model="editInput.address">
              <label for="edit_address">First Name</label>
            </div>
          </div>
        </form>
      </div>
    </div>
    <div class="modal-footer">
      <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Close</a>
      <a href="#!" @@click="update" class="btn waves-effect waves-light"><i class="material-icons">edit</i></a>
    </div>
  </div>
</div>
	
}


@section script {
	const url = "/sinavsaatlerijson.aspx";
	var vm = new Vue({
		el: '#app',
			 data: {
	  columns: ['Index', 'Dersin Kodu', 'Dersin Adı', 'Tarih/Saat', 'Salonlar', 'Gözetmenler', 'Yayın Durumu', 'Yayınlanması Planlanan Zaman', 'Yayından Kaldırılacağı Zaman', 'Eylemler '],
    results: [],
    bin: [],
    input: {},
	  editInput:{}
  },
			  
  created: function () {
		this.fetchData();
	},
  methods: {
	  fetchData: function (event) {
			axios.get(url).then(response => {
				console.log(response);
				this.results = response.data.items;


			})
		},
			  
			  
			  
			  
	  add: function() {
		  
		  axios.put('/sinavapi.aspx?umbdebugshowtrace=true', {
    firstName: 'Fred',
    lastName: 'Flintstone'
  })
  .then(function (response) {
    console.log(response);
  })
  .catch(function (error) {
    console.log(error);
  });
		  
		  
      this.results.push({
        dersin_kodu: this.input.dersin_kodu,
        dersin_adi: this.input.dersin_adi,
        sinav_salonlari: this.input.sinav_salonlari,
        sinav_tarihi: this.input.sinav_tarihi,
        gozetmenler: this.input.gozetmenler
      });

      for (var key in this.input) {
        this.input[key] = '';
      }
      this.$refs.dkodu.focus();
    },
    //function to handle data edition
    edit: function(index) {
		 this.editInput = this.results[index];
      console.log(this.editInput);
      this.results.splice(index, 1);
	},
    //function to send data to bin
    archive: function(index) {},
    //function to restore data
    restore: function(index) { },
    //function to update data
    update: function(){},
    //function to defintely delete data 
    deplete: function(index) {}
  }
});

//function to sort table data alphabetically
var ordonner = function(a, b) {
  return (a.lname > b.lname);
};
}