@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using Newtonsoft.Json.Linq
@using umbraco.MacroEngines
@using umbraco.cms.businesslogic.datatype
@using Umbraco.Core.Models
@using System.Collections.Generic;

@functions{
  public JArray JsonDiziOlustur(List<int> veri, string ozellik_adi){
    JArray veri_dizisi = new JArray();
    var contentService = ApplicationContext.Current.Services.ContentService;

    foreach (int tekil_veri in veri) {
      var content = contentService.GetById(tekil_veri);
      string okunabilir_veri = content.GetValue<string>(ozellik_adi);
      veri_dizisi.Add(okunabilir_veri);
    }
    return  veri_dizisi;
  }
}

@{
  Layout = null;
  var kullanici_ismi = Members.GetCurrentMemberProfileModel().UserName;
  Dictionary<string, string> yayinlanma_durumlari = new Dictionary<string, string>();
  yayinlanma_durumlari.Add("AwaitingRelease", "Yayınlanma Zamanını Bekliyor");
  yayinlanma_durumlari.Add("Published", "Yayında");
  yayinlanma_durumlari.Add("Expired", "Yayından Kaldırılmış");
  yayinlanma_durumlari.Add("Unpublished", "Yayınlanmamış");
  var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
  var contentService = ApplicationContext.Current.Services.ContentService;
  dynamic items = new JArray();
  IContent aktif_program = contentService.GetById(1183);
  if(aktif_program != null) {
    IEnumerable<IContent> yayinda_olan_sinavlar = contentService.GetDescendants(aktif_program).Where(x => x.ContentType.Alias.Equals("Sinav"));
    foreach(var tekil_sinav in yayinda_olan_sinavlar) {
      dynamic satir = new JObject();
      int ders_id = tekil_sinav.GetValue<int>("sinavin_dersi");
      var ders_node = contentService.GetById(ders_id);
      string derskodu = ders_node.GetValue<string>("dersin_kodu");
      string dersadi = ders_node.GetValue<string>("dersin_adi");
      var sinav_zamani = tekil_sinav.GetValue<DateTime>("sinav_tarihi_ve_saati").ToString("dd-MM-yyyy HH:mm");
      int sorumlu_ogretim_elemani_id = tekil_sinav.GetValue<int>("dersin_sorumlu_ogretim_elemani");
      var sorumlu_ogretim_elemani = contentService.GetById(sorumlu_ogretim_elemani_id).GetValue<string>("oegretim_elemani_ad_soyad");
      var gzetmenler = tekil_sinav.GetValue<string>("sinav_gozetmenleri").Split(',').Select(Int32.Parse).ToList();
      var slonlar = tekil_sinav.GetValue<string>("sinav_salonlari").Split(',').Select(Int32.Parse).ToList();

      DateTime? expiredate = tekil_sinav.ExpireDate;
      DateTime? releasedate = tekil_sinav.ReleaseDate;
      string edate = null;
      string rdate = null;
      if(expiredate.HasValue) {
        edate = ((DateTime)expiredate).ToString("dd-MM-yyyy HH:mm");
      }
      if(releasedate.HasValue) {
        rdate = ((DateTime)releasedate).ToString("dd-MM-yyyy HH:mm");
      }



      satir.id = tekil_sinav.Id;
      satir.username = kullanici_ismi;
      satir.derskodu = derskodu;
      satir.dersadi = dersadi;
      satir.sinavzamani = sinav_zamani;
      satir.derssorumlusu = sorumlu_ogretim_elemani;
      satir.gozetmenler = JsonDiziOlustur(gzetmenler, "oegretim_elemani_ad_soyad");
      satir.salonlar = JsonDiziOlustur(slonlar, "salonun_kodu");
      satir.yayinlanmasi_planlanan_zaman = rdate;
      satir.yayindan_kaldirilma_zamani = edate;
      satir.durum = yayinlanma_durumlari[tekil_sinav.Status.ToString()];

      items.Add(satir);
      
      @*
        satir.gozetmenler = new JArray(gozetmenler.Select(s => JToken.FromObject(s)));

      items.Add(satir);
      <h2>index</h2>


        @Html.Raw(serializer.Serialize(tekil))

        <b>Dersin Programları :</b>
        @tekil.GetValue("dersin_programi")
        <br />
        <b>Sinav salonları:</b>
        @tekil.GetValue("sinav_salonlari")

        @tekil.GetValue("sinav_gozetmenleri")
        <br />

        IPublishedContent program = Umbraco.TypedContent(tekil_si.GetValue("dersin_programi"));
      *@
    }
  }

    dynamic product = new JObject();
    product.ProductName = "Elbow Grease";
    product.Enabled = true;
    product.Price = 4.90m;
    product.StockCount = 9000;
    product.StockValue = 44100;
    product.Tags = new JArray(
        new JObject(new JProperty("Date", DateTime.Now), new JProperty("Dae","dd")),
        new JObject(new JProperty("Date", DateTime.Now), new JProperty("Dae","ddnn"))
        );
    Response.ContentType = "application/json";
  }
  @Html.Raw(items)
